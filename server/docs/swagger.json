{
    "swagger": "2.0",
    "info": {
        "contact": {
            "name": "gshare API Support",
            "email": "austin.spencer2097@gmail.com"
        }
    },
    "paths": {
        "/live": {
            "get": {
                "description": "Simple health check endpoint to check if the server is alive.",
                "tags": [
                    "Server"
                ],
                "summary": "confirm the server is alive",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Simple ping endpoint to check if the server is alive.",
                "tags": [
                    "Server"
                ],
                "summary": "ping the server",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/ready": {
            "get": {
                "description": "Simple health check endpoint to check if the server is ready.",
                "tags": [
                    "Server"
                ],
                "summary": "confirm the server is ready",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/auth": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the authenticated user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "get the authenticated user, if there is one.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "update the user with given payload",
                "parameters": [
                    {
                        "description": "Updated User",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "post": {
                "description": "Authenticate a user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "authenticate a user",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.Auth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/2fa": {
            "post": {
                "description": "Authenticate a user with their 2FA code.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "authenticate a user with given 2FA code",
                "parameters": [
                    {
                        "description": "Two Factor auth credentials",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.TwoFactorAuth"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.APIResponse"
                        }
                    }
                }
            }
        },
        "/v1/download/{size}/gallery/{galleryID}": {
            "get": {
                "description": "Download gallery by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Download"
                ],
                "summary": "download an entire gallery by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image Size",
                        "name": "size",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gallery ID",
                        "name": "galleryID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Image"
                        }
                    }
                }
            }
        },
        "/v1/download/{size}/image/{imageID}": {
            "get": {
                "description": "Download image by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Download"
                ],
                "summary": "download an image by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image Size",
                        "name": "size",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "imageID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Image"
                        }
                    }
                }
            }
        },
        "/v1/download/{size}/images": {
            "post": {
                "description": "Download multiple images by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Download"
                ],
                "summary": "download any number of images in a gallery",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image Size",
                        "name": "size",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "List of image IDs",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.BulkSelect"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Image"
                        }
                    }
                }
            }
        },
        "/v1/event/{eventID}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete event by given ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "remove event by given ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "eventID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/events": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all events.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "get all events that exist",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Event"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create an event.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "create a new event.",
                "parameters": [
                    {
                        "description": "New Event",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    }
                }
            }
        },
        "/v1/events/{eventID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get event by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event"
                ],
                "summary": "get a event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "eventID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    }
                }
            }
        },
        "/v1/galleries": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all galleries.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gallery"
                ],
                "summary": "get all galleries that exist",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Gallery"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new gallery.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gallery"
                ],
                "summary": "create a new gallery",
                "parameters": [
                    {
                        "description": "New Gallery",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.Gallery"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Gallery"
                        }
                    }
                }
            }
        },
        "/v1/galleries/id/{galleryID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get gallery by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gallery"
                ],
                "summary": "get a gallery by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gallery ID",
                        "name": "galleryID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Gallery"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update gallery.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gallery"
                ],
                "summary": "update the gallery with given payload",
                "parameters": [
                    {
                        "description": "Updated Gallery",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.GalleryUpdate"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Gallery ID",
                        "name": "galleryID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Gallery"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete gallery by given ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gallery"
                ],
                "summary": "remove gallery by given ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gallery ID",
                        "name": "galleryID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/galleries/id/{galleryID}/images": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update gallery images order.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gallery"
                ],
                "summary": "update gallery images order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gallery ID",
                        "name": "galleryID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Image IDs",
                        "name": "images",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload a new Image.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gallery"
                ],
                "summary": "upload a new Image to the gallery",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gallery ID",
                        "name": "galleryID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file to upload",
                        "name": "src",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Image"
                        }
                    }
                }
            }
        },
        "/v1/galleries/id/{galleryID}/images/zips": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create the zips of the gallery.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gallery"
                ],
                "summary": "create the zip files of the gallery",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gallery ID",
                        "name": "galleryID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/v1/galleries/id/{galleryID}/qr-code": {
            "get": {
                "description": "Generate the QR Code for the gallery with the ID given.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gallery"
                ],
                "summary": "create a QR Code for the gallery",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gallery ID",
                        "name": "galleryID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Gallery"
                        }
                    }
                }
            }
        },
        "/v1/galleries/live": {
            "get": {
                "description": "Get all live galleries.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gallery"
                ],
                "summary": "get all galleries that are live",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Gallery"
                            }
                        }
                    }
                }
            }
        },
        "/v1/galleries/path/{galleryPath}": {
            "get": {
                "description": "Get gallery by path.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gallery"
                ],
                "summary": "get a gallery by path which must be public and live",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gallery Path",
                        "name": "galleryPath",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Gallery"
                        }
                    }
                }
            },
            "post": {
                "description": "Unlock the gallery by password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gallery"
                ],
                "summary": "unlock the gallery if the given password is correct",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Gallery Path",
                        "name": "galleryPath",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/v1/galleries/public": {
            "get": {
                "description": "Get all public galleries.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Gallery"
                ],
                "summary": "get all galleries that are public and live",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Gallery"
                            }
                        }
                    }
                }
            }
        },
        "/v1/images": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all images.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Image"
                ],
                "summary": "get all images that exist",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Image"
                            }
                        }
                    }
                }
            }
        },
        "/v1/images/{imageID}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get image by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Image"
                ],
                "summary": "get an image by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "imageID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Image"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete image by given ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Image"
                ],
                "summary": "remove image by given ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "imageID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/images/{imageID}/{width}/{quality}": {
            "get": {
                "description": "Get image with specified size.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Image"
                ],
                "summary": "get an image with the desired width and quality; quality only works with",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "imageID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Image Width",
                        "name": "width",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Image Quality",
                        "name": "quality",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/settings": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the server settings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "get the server settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Settings"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update the server settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "update the server settings",
                "parameters": [
                    {
                        "description": "Updated Settings",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.Settings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Settings"
                        }
                    }
                }
            }
        },
        "/v1/settings/public": {
            "get": {
                "description": "Get the server public settings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "get the server public settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Settings"
                        }
                    }
                }
            }
        },
        "/v1/settings/redeploy": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Redeploy the site",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Settings"
                ],
                "summary": "redeploy the client site",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Settings"
                        }
                    }
                }
            }
        },
        "/v1/users/admin/create": {
            "post": {
                "description": "Create first admin user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "create the first admin user.",
                "parameters": [
                    {
                        "description": "New User",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/v1/users/{userID}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "update the user.",
                "parameters": [
                    {
                        "description": "Updated User",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.UserUpdate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "models.APIResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data of the response"
                },
                "status": {
                    "description": "Status of the request (success, fail)",
                    "type": "string"
                }
            }
        },
        "models.Auth": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.BulkSelect": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "models.Event": {
            "type": "object",
            "properties": {
                "bytes": {
                    "description": "Bytes is the size of the download file in bytes",
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "filename": {
                    "description": "Filename is the name of the file downloaded",
                    "type": "string"
                },
                "gallery_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "image_id": {
                    "description": "Image ID is null if the event is downloading entire gallery",
                    "type": "integer"
                },
                "requestor": {
                    "description": "Requestor is the host that requested the download",
                    "type": "string"
                },
                "size": {
                    "description": "Size is the size of the image downloaded (web, original)",
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Gallery": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "event_date": {
                    "description": "The date the event occurred",
                    "type": "string"
                },
                "events": {
                    "description": "All events related to this gallery",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Event"
                    }
                },
                "expiration": {
                    "description": "Date the gallery expires and will no longer be visible",
                    "type": "string"
                },
                "featured_image": {
                    "description": "Featured image for the gallery",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Image"
                        }
                    ]
                },
                "hero_enabled": {
                    "description": "HeroEnabled will determine if the gallery has a featured image landing page",
                    "type": "boolean"
                },
                "hero_variant": {
                    "description": "HeroVariant is the display variant for the hero",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "description": "All images in the gallery",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Image"
                    }
                },
                "images_count": {
                    "description": "Total number of images in the gallery",
                    "type": "integer"
                },
                "live": {
                    "description": "Date the gallery goes live",
                    "type": "string"
                },
                "path": {
                    "description": "Path for the gallery on frontend",
                    "type": "string"
                },
                "protected": {
                    "description": "If the gallery is password protected",
                    "type": "boolean"
                },
                "public": {
                    "description": "Determines if the collection is visible on the homepage\nIf protected is true, then it won't show regardless",
                    "type": "boolean"
                },
                "reminder": {
                    "description": "If the gallery should send out an automated reminder\nReminder gets sent 5 days prior to expiration",
                    "type": "boolean"
                },
                "reminder_emails": {
                    "description": "If reminders are enabled, we need to have the emails to send to\nThese are a space separated list of emails",
                    "type": "string"
                },
                "title": {
                    "description": "Title of the gallery",
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "zips_ready": {
                    "description": "ZipsReady will track if the zip files are created and up to date\nIf a new image is uploaded/deleted since zips were created will switch to false",
                    "type": "boolean"
                }
            }
        },
        "models.GalleryUpdate": {
            "type": "object",
            "properties": {
                "event_date": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "featured_image_id": {
                    "type": "integer"
                },
                "hero_enabled": {
                    "type": "boolean"
                },
                "hero_variant": {
                    "type": "integer"
                },
                "live": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "protected": {
                    "type": "boolean"
                },
                "public": {
                    "type": "boolean"
                },
                "reminder": {
                    "type": "boolean"
                },
                "reminder_emails": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Image": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "featured_gallery_id": {
                    "description": "If this image is the feature image it will have the gallery ID here",
                    "type": "integer"
                },
                "filename": {
                    "description": "Image filename",
                    "type": "string"
                },
                "gallery_id": {
                    "description": "The gallery this image is linked to",
                    "type": "integer"
                },
                "height": {
                    "description": "Height for the original image",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "position": {
                    "description": "Position in the gallery",
                    "type": "integer"
                },
                "size": {
                    "description": "Size of the image in bytes",
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "width": {
                    "description": "Width for the original image",
                    "type": "integer"
                }
            }
        },
        "models.Settings": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "new_application": {
                    "description": "NewApplication will alert the frontend that there are no users and we need to create admin",
                    "type": "boolean"
                },
                "update": {
                    "description": "Update is a flag that indicates if the client has backend updates to catch up on.",
                    "type": "boolean"
                },
                "updatedAt": {
                    "type": "string"
                },
                "uptime": {
                    "description": "Server uptime",
                    "allOf": [
                        {
                            "$ref": "#/definitions/time.Duration"
                        }
                    ]
                },
                "version": {
                    "description": "Server version ignored by GORM",
                    "type": "string"
                }
            }
        },
        "models.TwoFactorAuth": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.UserUpdate": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}