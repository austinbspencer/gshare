###### CLIENT ######

# Url for the API; Example: https://gallery-api.photography.com
# Tip: If your client url is available on https, your API url must also be https
NEXT_PUBLIC_API_URL="http://localhost:8080"
# URL for this application; Example: https://gallery.photography.com
NEXT_PUBLIC_CLIENT_URL="http://localhost:3000"
# Your Photography Business name
NEXT_PUBLIC_PHOTOGRAPHER_NAME="Your Photography Business"
# Your business email
NEXT_PUBLIC_PHOTOGRAPHER_EMAIL="photographer@photography.com"
# Your main photography portfolio website
# Tip: If you don't have a website, you can instead link your Instagram or a different social
NEXT_PUBLIC_PHOTOGRAPHER_WEBSITE="https://photography.com"
# Primary color for your galleries
# A dark variant is likely best so it is easily visible
NEXT_PUBLIC_GALLERY_THEME_PRIMARY="#2E8555"
# The contrast text color for your primary color
# This is the text color of the download button
NEXT_PUBLIC_GALLERY_THEME_TEXT="#ffffff"
# Whether or not to show the hero image on client galleries
# The hero image is the full screen featured image
NEXT_PUBLIC_GALLERY_HERO_ENABLED=true
# Displays a powered by gshare message in the footer with a link to the project
# Keep this as true for an easy way to support the project :)
NEXT_PUBLIC_POWERED_BY_ENABLED=true
# The favicon clients will see when they visit your galleries
# NEXT_PUBLIC_PHOTOGRAPHER_FAVICON="https://photography.com/favicon.ico"
# The light variant logo for your photography business (displayed on hero page if enabled)
# NEXT_PUBLIC_PHOTOGRAPHER_LOGO_LIGHT="https://photography.com/logo-light.png"
# The dark variant logo for your photography business (displayed on homepage if public)
# NEXT_PUBLIC_PHOTOGRAPHER_LOGO_DARK="https://photography.com/logo-dark.png"
# NEXT_PUBLIC_IMAGE_MIN_WIDTH is to adjust the minimum width of images displayed on the gallery page
# By lowering this you risk images appearing blurry
# The default value is 256 and should work to lower resources while limiting blur
# Important: this does NOT effect uploading or downloading of images or your originals in any way
NEXT_PUBLIC_IMAGE_MIN_WIDTH=256

# If enabled, the homepage of your gshare site will display all public galleries
# If disabled, the homepage will return a 404 page
HOMEPAGE_ENABLED=true

####### SERVER #######

# Should be the URL that your clients actually see
# Likely the exact same value as (NEXT_PUBLIC_CLIENT_URL)
# Only used for QR code generation
CLIENT_URL="http://localhost:3000"
# The name of the gshare client Docker container
# This is used to redeploy the client when the backend changes
CLIENT_CONTAINER="gshare-client"
# Allowed origins. Comma separated string is expected which includes the full host.
# Wildcard is not supported.
# In production, it is best practice to set this to only the origins you will make requests from.
# Example: "https://gallery.photography.com, https://gallery-api.photography.com"
ALLOWED_ORIGINS="http://localhost:3000, http://localhost:8080"
# Timeout for requests to the server.. If you have low resources and are uploading
# very large images you may need to increase this if you are getting 408 errors
SERVER_READ_TIMEOUT=60 # In seconds
# The maximum size for request body
MAX_BODY_SIZE=20 # In MB
# The timezone for the server
TZ=UTC

# Cron
# The cron is used to automatically redeploy static frontend due to the changes in the backend
# If cron is enabled, make sure you have the correct container name / id in CLIENT_CONTAINER env
CRON_ENABLED=true
# The interval to check for newly live / expired galleries
CRON_GALLERIES_INTERVAL=10 # In minutes

# Limiter
# The limiter is used to limit repeat requests and return 429 error
# https://docs.gofiber.io/api/middleware/limiter/
LIMITER_ENABLED=false
# Number of requests for limit
LIMITER_REQUESTS=100
# Time window for the limit
LIMITER_EXPIRATION=5 # In seconds

# Logging
# Logging for Gorm queries. Options: silent,error,warn,info Default: warn
GORM_LOG_LEVEL=warn
# General logging for API. Options: fatal,panic,error,warn,info,debug,trace Default: info
LOG_LEVEL=info

# For swagger to work properly, this must be updated to the url you are accessing swagger
# Omit the protocol as this is set programatically
SWAGGER_URL="localhost:8080"
# Protocol to allow for Swagger requests
# Allowed values -> http OR http,https OR https
SWAGGER_PROTOCOL=http,https

# Secret key for the JWT authentication
# Please change this to a random string - You can use the command below to generate your own
# openssl rand -hex 32
JWT_SECRET_KEY=e0b3b8727f522f9a92ae3feb86c8350e27e020b86f1d8d7e63619194975ba702
JWT_SECRET_KEY_EXPIRE_MINUTES_COUNT=0
JWT_SECRET_KEY_EXPIRE_HOURS_COUNT=6
JWT_SECRET_KEY_EXPIRE_DAYS_COUNT=0

# Two factor authentication
# If you want to enable 2fa, set this to true
# If true, you must also set the SMTP credentials below
TWO_FACTOR_AUTHENTICATION=false

# Cache driver determines where cache is stored
# Available options are 'memory' OR 'redis'
CACHE_DRIVER=memory
# If you set the cache driver to 'redis' then you must make sure the credentials below are correct
REDIS_HOST=localhost
REDIS_PORT=6379
# REDIS_USER=
# REDIS_PASSWORD=

# Admin user credentials
ADMIN_EMAIL=admin@domain.dev
# Change this password to something more secure
ADMIN_PASSWORD=insecure

####### PostgreSQL Database #######
DB_HOST=localhost
DB_USER=gallery
DB_NAME=gshare_db
DB_PASSWORD=insecure
DB_PORT=5432

####### Images Storage #######
# The directory where all uploaded images are stored
# Structure for the images storage is as follows:
# ${IMAGES_DIRECTORY}/{gallery_id}/{'original' | 'web' | 'zips'}/{filename}.{extension}
IMAGES_DIRECTORY=/app/images

####### SMTP #######
# SMTP is used to send emails for 2fa and alerts
# If you aren't using 2fa and don't want to receive email alerts,
# you can ignore this section
# SMTP_FROM=
# SMTP_USERNAME=
# SMTP_PASSWORD=
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_TLS=true